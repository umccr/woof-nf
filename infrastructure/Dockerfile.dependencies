# Build on top of Ubuntu LTS (focal)
FROM ubuntu:20.04

# Set Conda environment name
ARG ENV_NAME=woof-nf

# Enable non-interactive tzdata install and config
ARG DEBIAN_FRONTEND='noninteractive'
ARG TZ='Etc/UTC'

# Install several packages through system package manager
# NOTE:
#   ca-certificates: required for https/curl
#   libx11-6: required for rendering report images
#   tzdata: required for readr
RUN \
  apt-get update && \
  apt-get install --yes --no-install-recommends \
    ca-certificates  \
    curl \
    libx11-6 \
    python3 \
    tzdata  \
    unzip && \
  # Clean up
  apt-get clean && \
  rm -rf /var/lib/apt/*

# Install AWS command line tools
RUN \
  curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip' && \
  unzip awscliv2.zip && \
  ./aws/install --bin-dir /usr/bin && \
  rm -r awscliv2.zip aws/

# Install Mambdaforge
RUN \
  curl -L 'https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh' -o 'mambaforge.sh' && \
  /bin/bash mambaforge.sh -b -p /opt/mambaforge/ && \
  rm mambaforge.sh

# Create Conda environment with woof-nf and dependencies
RUN \
  eval "$(/opt/mambaforge/bin/conda shell.bash hook)" && \
  mamba create \
    --name "${ENV_NAME}" \
    --channel umccr \
    --channel bioconda \
    --channel conda-forge \
    --channel defaults \
    --yes \
    woof-nf && \
  # Clean up
  mamba clean --all --force-pkgs-dirs --yes

# Add new Conda environment to PATH
ENV PATH="/opt/mambaforge/envs/${ENV_NAME}/bin:/opt/mambdaforge/bin:${PATH}"
ENV CONDA_PREFIX="/opt/mambaforge/envs/${ENV_NAME}"
